# Bonus Bonds / Счачтливые билеты   V - 49.

#   На вход программе подаётся серия строк из входного файла, каждая из которых
# состоит из 10 цифр, которые обозначают номер следующего билета, и целого 
# числа, представляющего собой желаемую позицию символа. Ввод оканчивается
# строкой со значением '0000000000 0'. Программа выдаёт серию таблиц для каждой
# строки, которые разделяются между собой пустой строкой.

# Переменные:

#   file_name - Имя входного файла
#   infile - Открытый файл для чтения

#   matrix_input - Матрица состоящая из строк ввода
#   matrix_output - Матрица для таблицы исходного билета (вывод)
#   sum_matrix - Сумма всех элементов матрицы matrix_output

#   delta - Основная неизменяемая разница между суммой чисел в таблице
# (matrix_output) и полученным числом при вычёркивании номера региона
#   delta_circle - Изменяющаяся разница между суммой чисел в таблице
# (matrix_output) и полученным числом при вычёркивании номера региона

#   bond - Исходный билет
#   count - Номер желаемой позиции символа
#   string - Ввод строки/массив состоящий из элементов введённой строки
#   position - Желаемая позиция числа
#   ticket - Номер билета с вырезаным номером региона

# i,j,p - Служебные переменные для циклов

'''
Тесты

// Входные данные:

0578238857 10
0511650957 3
0967030501 9
0527918244 5
0142523883 3
0067891057 6
0946982024 1
0952828540 10
0125716025 1
0434435728 10
0140555385 3
0000000000 0

// Выходные данные:

// Для строки - 0578238857 10
    5823886
    5823886
    5823886
    5823886
    5823886
    5823886
    5823886
    5823885
    5823885
    5823885

// Для строки - 0511650957 3
          0
   51650957
          0
          0
          0
          0
          0
          0
          0
          0

// Для строки - 0967030501 9
    9703051
    9703050
    9703050
    9703050
    9703050
    9703050
    9703050
    9703050
    9703050
    9703050

// Для строки - 0527918244 5
    5800000
    5800000
    5800000
    5800000
    5800000
    5800000
    5800000
    5800000
    5800000
    5718244

// Для строки - 0142523883 3
          0
          0
          0
          0
   12523883
          0
          0
          0
          0
          0

// Для строки - 0067891057 6
     790000
     790000
     790000
     790000
     790000
     790000
     790000
     790000
     790000
     781057

// Для строки - 0946982024 1
   96982024
          0
          0
          0
          0
          0
          0
          0
          0
          0

// Для строки - 0952828540 10
    9282854
    9282854
    9282854
    9282854
    9282854
    9282854
    9282854
    9282854
    9282854
    9282854

// Для строки - 0125716025 1
   15716025
          0
          0
          0
          0
          0
          0
          0
          0
          0

// Для строки - 0434435728 10
    4443573
    4443573
    4443573
    4443573
    4443573
    4443573
    4443573
    4443573
    4443572
    4443572

// Для строки - 0140555385 3
          0
          0
          0
          0
   10555385
          0
          0
          0
          0
          0
'''

file_name = 'input.txt'

print('// Используемый файл /',file_name)

infile = open(file_name)

string = ' '
matrix_input = []
flag = True

while string != '':
    string = infile.readline()
    if string != '' and string != '0000000000 0':
        flag = False
        matrix_input.append(string)

if flag:
    print('\n// Файл пуст')
else:

    # Убираю перенос в конце строки
    for i in range(len(matrix_input)):
        matrix_input[i]=matrix_input[i][:(len(matrix_input[i])-1)]

    print('\n// Входные данные:\n')
    for i in matrix_input:
        print(i)

    print('\n// Полученная таблица:\n')

    for i in range(len(matrix_input)):
        matrix_output = []
        bond = ''
        count = ''
        string = []
    
        for j in range(len(matrix_input[i])):
            if '0' <= matrix_input[i][j] <= '9':  # Из строки нахожу все числа
                bond += matrix_input[i][j]        # и разбиваю их на 2 элемента
            else:                                 # массива string
                string.append(bond)
                bond=''
        string.append(bond)
    
        bond = string[0]                     # Запоминаю билет
        count = string[1]                    # и позицию желаемого числа

        count=int(count)

        if count == 3:                          # Обработка частного случая,
            position=int(bond[(count-1):count]) # когда номер желаемой позиции
            matrix_output = [0]*10              # совпадает с номером региона 
            bond = bond[:2] + bond[3:]      
            matrix_output[position] = int(bond)
        
        elif count == 1:                    # Обработка случая, когда номер
            matrix_output = [0]*10          # желаемой позиции равен 1-му
            bond = bond[:2] + bond[3:]
            position = int(bond[0])
            ticket = int(bond)
            bond = int(bond[1:])
            matrix_output[position] = bond

            count = ticket - bond
        
            for p in range(position):
                matrix_output[p] = int(count/position)
            
        else:
            position = int(bond[(count-1):count])
            
            # Запоминаю полный номер билета (без вырезанной позиции)
            ticket = int(bond[:2] + bond[3:])

            # Так как позиция может стоять на 2-ом месте, то необходимо
            # вырезать сначала её, а затем номер региона
            if count < 3:
                # Обрезаю желаемую позицию и  код региона
                bond = int(bond[:(count-1)] + bond[3:])
                    
            else:
                # Обрезаю код региона и желаемую позицию
                bond = int(bond[:2] + bond[3:(count-1)] + bond[count:])
                
            # Заполняю матрицу этим числом
            matrix_output = [bond]*10

            sum_matrix = 0
            # Сумма всех элементов в матрице            
            for p in matrix_output:
                sum_matrix += p
                
            # Нахожу разницу между самим билетом и суммой элементов матрицы,
            # так как сумма элементов матрицы должна быть равна значению билета
            # без номера региона (неизменяемая)
            delta = ticket - sum_matrix - 1
        
            delta_circle = 0
        
            while abs(delta_circle) < (abs(delta) - 1):
            
                # Те числа которые расположены сверху будут увеличиваться, а
                # значит разница delta_circle тоже расти
                for p in range(position):
                    matrix_output[p] += 1
                    delta_circle += 1
                
                # Если после увеличения разница delta_circle стала примерно
                # равна delta, то обрываю цикл
                if not(abs(delta_circle) < abs(delta)):
                    break
            
                # Те числа которые расположены снизу будут уменьшаться, а
                # значит разница delta_circle тоже уменьшаться
                for p in range((position+1),len(matrix_output)):
                    matrix_output[p] -= 1
                    delta_circle -= 1
                    
        print('// Для строки -',matrix_input[i])             
        for p in matrix_output:
            p = str(p)
            p = ' '*(11-len(p))+p
            print(p)
        print()
        
input('Для завершения нажмите Enter...')
